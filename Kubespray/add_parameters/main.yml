... тут пропущена дефолтная часть, сам файл находится в ~/kubespray/roles/kubernetes/client/tasks/ ...

- name: Check if /root/user7/.kube directory exists
  stat:
    path: /root/.kube
  register: kube_dir7

- name: Create /home/user7/.kube directory if it does not exist
  file:
    path: /home/user7/.kube
    state: directory
    owner: user7
    group: user7
    mode: '0755'
  when: kube_dir7.stat.exists
  become: yes

- name: Copy kube config to user7 home directory if directory exists
  become: yes
  copy:
    src: /root/.kube/config
    dest: /home/user7/.kube/config
    owner: user7
    group: user7
    mode: '0644'
    remote_src: yes
  when: kube_dir7.stat.exists

- name: Create test-service service file with specific content
  become: yes
  copy:
    dest: /home/user7/deploy.yaml
    owner: user7
    group: user7
    mode: '0644'
    content: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: test-nginx-app
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: nginx
        template:
          metadata:
            labels:
              app: nginx
          spec:
            nodeSelector:
              role: app
            containers:
            - name: nginx
              image: 4ivan/test-nginx-app:latest
              ports:
              - containerPort: 80
                hostPort: 80
  when: kube_dir7.stat.exists

- name: Create values.yaml service file with specific content
  become: yes
  copy:
    dest: /home/user7/values.yaml
    owner: user7
    group: user7
    mode: '0644'
    content: |
      server:
        service:
          type: NodePort
          nodePort: 30900
      alertmanager:
        service:
          type: NodePort
          nodePort: 30903
      pushgateway:
        service:
          type: NodePort
          nodePort: 30902
      grafana:
        service:
          type: NodePort
          nodePort: 30080
        adminPassword: "password"
      ingress:
        enabled: false
  when: kube_dir7.stat.exists

- name: Create teamcity.yaml service file with specific content
  become: yes
  copy:
    dest: /home/user7/teamcity.yaml
    owner: user7
    group: user7
    mode: '0644'
    content: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: teamcity
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: teamcity
        template:
          metadata:
            labels:
              app: teamcity
          spec:
            nodeSelector:
              role: teamcity
            containers:
            - name: teamcity
              image: jetbrains/teamcity-server:latest
              ports:
              - containerPort: 8111
              resources:
                requests:
                  memory: "2Gi"
                  cpu: "1000m"
                  ephemeral-storage: "2Gi"
                limits:
                  memory: "3Gi"
                  cpu: "1500m"
                  ephemeral-storage: "7Gi"
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: teamcity-nodeport
      spec:
        type: NodePort
        selector:
          app: teamcity
        ports:
          - port: 80
            targetPort: 8111
            nodePort: 30070
  when: kube_dir7.stat.exists
  
- name: Create script file with specific content
  become: yes
  copy:
    dest: /home/user7/script
    owner: user7
    group: user7
    mode: '0755'
    content: |
      #!/bin/bash
      # Устанавливаем jdk для агента teamcity 
      sudo apt update
      sudo apt install openjdk-21-jdk
      # Открываем порты для grafana и teamcity agent
      sudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT
      sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 30080
      #Создаем namespaces
      kubectl create namespace namespace-test
      kubectl create namespace monitoring
      #Распределяем роли
      kubectl label node node1 role=monitoring
      kubectl label node node2 role=app
      kubectl label node node3 role=teamcity
      #Запускаем приложение
      kubectl apply -f deploy.yaml
      # Запускаем grafana, alertmanager, prometheus, node_exporter
      helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      helm repo update
      helm install prometheus prometheus-community/kube-prometheus-stack -n monitoring -f values.yaml
      #Запускаем teamcity
      kubectl apply -f teamcity.yaml
      # Устанавливаем docker для агента teamcity, выдаем правадля пользователю
      # Add Docker's official GPG key:
      sudo apt-get update
      sudo apt-get install ca-certificates curl
      sudo install -m 0755 -d /etc/apt/keyrings
      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      sudo chmod a+r /etc/apt/keyrings/docker.asc
      # Add the repository to Apt sources:
      echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      sudo apt-get update
      sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      sudo usermod -aG docker user7
      sudo newgrp docker
  when: kube_dir7.stat.exists
